
Time Stamp: 25th Oct. 2K23 - 06:25 PM..!!
Author: Harshit Gupta - K.O.H..!!
GitHub: https://www.github.com/kohthecodemaster
----------------------------------------------------------------------------------------------------

HTML `<input>` Element

The `<input>` element is a versatile and fundamental HTML element used to create form controls that allow users to input data. It can be used for various types of input, including text, checkboxes, radio buttons, and more. Here are key points about the `<input>` element:

1. Syntax: The `<input>` element is a self-closing tag and doesn't have a closing tag. It's typically used within a `<form>` element to create various types of input controls.

   ```html
   <input type="text" name="username" id="username" value="JohnDoe">
   ```

2. `type` Attribute: The `type` attribute determines the type of input control to be created. Common values include:
   - `text`: Creates a single-line text input field.
   - `password`: Creates a password input field where the text is masked.
   - `checkbox`: Creates a checkbox for binary choices.
   - `radio`: Creates a radio button for selecting one option from a group.
   - `email`: Creates a text input field for email addresses.
   - `number`: Creates a text input field for numeric values.
   - `date`: Creates a date input field.
   - and many more.

3. `name` and `id` Attributes: The `name` attribute is used to identify the input control when the form is submitted, and the `id` attribute provides a unique identifier for the element.

4. `value` Attribute: The `value` attribute can be used to pre-fill the input control with a default value.

5. `required` Attribute: The `required` attribute can be added to make the input control mandatory. It prevents the form from being submitted unless the user provides a value.

6. Labeling: To improve accessibility and user experience, it's recommended to associate each input control with a corresponding `<label>` element using the `for` and `id` attributes.

7. Styling: Input controls can be styled using CSS to match the design of your website. CSS can control the appearance and layout of input elements.

8. Common Use Cases: Input controls are used in various forms, such as registration forms, login forms, search boxes, and more.

Example:

```html
<!DOCTYPE html>
<html>
  <head>
    <title>Input Element Example</title>
  </head>
  <body>
    <h1>Login</h1>
    <form action="login.php" method="post">
      <label for="username">Username:</label>
      <input type="text" id="username" name="username" required>
      <label for="password">Password:</label>
      <input type="password" id="password" name="password" required>
      <input type="submit" value="Log In">
    </form>
  </body>
</html>
```

In this example, the `<input>` element is used to create text input fields for username and password. The input fields are required, and they are associated with corresponding `<label>` elements for improved accessibility and usability. The form is set to send the data to a server-side script ("login.php") when submitted.
