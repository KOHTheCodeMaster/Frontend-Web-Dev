
Time Stamp: 23rd Oct. 2K23 - 07:40 PM..!!
Author: Harshit Gupta - K.O.H..!!
GitHub: https://www.github.com/kohthecodemaster
----------------------------------------------------------------------------------------------------

HTML (Hypertext Markup Language) - Introduction

HTML is the backbone of web content. It's a markup language used to create the structure and content of web pages. Here are some key points for an introduction to HTML:

1. Definition: HTML stands for Hypertext Markup Language. It's not a programming language but a markup language used for creating web pages.

2. Structure: HTML provides a structured way to format and display text, images, links, and other elements on a web page.

3. Markup: HTML uses "tags" to define elements and their attributes. Tags are enclosed in angle brackets, like `<tag>`. Example: `<h1>My Title</h1>`.

4. Elements: Common HTML elements include headings, paragraphs, lists, links, images, and more. Each element has a specific purpose in structuring web content.

5. Hierarchy: HTML documents are structured as a hierarchy with a `<html>` root element. Inside, you have `<head>` (meta information) and `<body>` (visible content) sections.

6. Attributes: Elements can have attributes that provide additional information or modify the element's behavior. Example: `<img src="image.jpg" alt="Description">`.

7. Basic Document Structure: A minimal HTML document consists of `<!DOCTYPE>`, `<html>`, `<head>`, `<title>`, and `<body>` elements.

8. Text Formatting: HTML allows you to format text using tags like `<strong>` (bold), `<em>` (italic), and `<u>` (underline).

9. Links: The `<a>` element is used to create hyperlinks. The `href` attribute specifies the URL to link to.

10. Lists: HTML supports ordered (`<ol>`) and unordered (`<ul>`) lists, as well as definition lists (`<dl>`).

11. Images: Use the `<img>` element to display images. The `src` attribute specifies the image file location.

12. Comments: You can add comments in HTML using `<!-- Comment text here -->`. Comments are not visible on the webpage but can be useful for documentation.

13. Semantic HTML: HTML5 introduced semantic elements like `<header>`, `<nav>`, `<article>`, and `<footer`> to provide more meaning and structure to web content.

14. Validation: It's important to write valid HTML to ensure compatibility across different browsers. Tools like the W3C Markup Validation Service can help check your code.

15. HTML Editors: You can create HTML documents using a simple text editor like Notepad or specialized HTML editors like Visual Studio Code or Adobe Dreamweaver.

These are the fundamental concepts you need to understand when starting with HTML. As you progress, you'll explore more elements and attributes to create rich web content.
